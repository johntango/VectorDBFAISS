So we've seen how to set up VS Code. Now I want to show you how VS Code allows us to interact quite smoothly with GitHub. So for example, suppose we want to set up a directory and write some code. So let's make a directory and I'm going to call it "test01" and we cd into that. And it's a clean directory. Let's suppose now I want to create a file in there and edit it. So let me go to VS Code. So here we are in VS Code. Let me go here. And let me open that space. Okay, I'm going to have to go quite a way through this. Let's see here. Test01. Here we are. Okay. I don't want to save that. It's an old one. So we've got a clean directory. There's nothing in it. Now we can create a file by first, here this will list out your files. And this will allow us to create a file. And this will allow us to create a new folder. Let's just create a file because we've already got our folder. So let's call this "test01.html". So we've got a clean file. I'm just going to put some code in there that I've written before. And it's HTML. I haven't put HTML tags but just a script tag. We'll show you why we're doing this because we can test this code then in the browser. So I've got a file and now I'd like to save it to a directory up in GitHub. I don't have a directory or rather a repo in GitHub created. This allows me to initialise a repository. That's exactly what I want to do. Or I could just publish this file directly to GitHub. Let's just do this second one because it'll take us through initialising a repository anyway. Okay, so "test01" that's a good name for the repo. And I want a public directory. So this asks me which files. Well it's already ticked "test01.html". And so this now you'll see will publish to GitHub. And so this spinning little disk down here successfully published that. Open in GitHub. So we can go to GitHub. Here we are in GitHub. And here's our "test01" repo. And it's got one file in it. I encourage you to add a README. So let's do that. And we can put some code in the READMEs. But for now let's just do that. I need to commit it as a new file. So I'll just call it README as a commit. And now commit it. And we'll have now we've got two files here. Okay, we can add files to the directory by dragging and dropping. But we can also just interact with GitHub now through this. If we make a change here. Test our skills. And save it. Now it knows, it puts a little 1 here because it knows we've got one file that's out of sync with GitHub. So we can commit to GitHub. So let's just do that. I'll just call skills01. This just gives a name to the update. And we need to add that one change. I can either add it with this file here. Or if I've got a number of files, it's best to do it here. So you add a plus. So now we're zero changes behind. Now this is equivalent to committing it. So we click on commit. Now we're okay. We've got a commit. Now we need to push it up into the repo. So let's push it here. And you'll see now we're back up to sync. And if we go and look in our repo, we'll see that everything's synchronised. So this is one way to do the updates with GitHub. Another way, let's just make ourselves another edit. Now we're one behind. We could, if we want, go through the old way of doing it, which would be to do git add etc. I want to just show you that we've now got a git directory. So git is keeping track of all our changes. It set that up for us. Now, if I wanted to do it by hand, we do a git add, a git commit with a message. So update two. And if we do a git status, it's telling us our branch here is one ahead of the master up in GitHub. So we need to do a git push. And that will push that change up to our GitHub repo. So that's how to easily interact via GitHub. So that's this button here. Okay, so good luck with VS Code and GitHub. Bye for now.