Hi, it's John Williams here at MIT. So I want to talk about the positive side of digital transformation. What can companies do and what path should they follow? So I'd like to take you through some slides by Adrian Cockroft, that is now with Amazon Web Services, but previously was CTO and main architect for Netflix. And he talks about the blockers for innovation, that certainly the culture within a company, companies are often hierarchical and need sign-offs and the clock tick is just not fast enough. And in some sense, the culture is wrong. So how do you change that culture to be a modern software culture, for example, that implements agile computing, the OODA loop, etc. And also, often people don't have the skills. So training and compensation don't go hand in hand in the sense that if you've got very skilled people, you need to compensate them. And also the organization needs to move to a product focus rather than a project focus. So people need to stay with those products because we're using continual integration to improve them. So this is not a one-off process where we launch the product and don't touch it again. Today, we'll be continually updating the code. Netflix has shown they do a huge amount of A/B testing. And also finance can be a problem in the sense that most companies are used to capital expenditure, for example, on infrastructure, whereas if you're operating on the cloud, it comes under operating expenses. And so sometimes people looking at the books will see a kind of different picture. And that can be problematic. So these are the red flags, if you like, the leadership systems and feedback. The centralized decision making sometimes gets in the way. There's a great book, "Turn the Ship Around," which again pushes decision making down the hierarchy and that we need to trust the people that are writing the code and deploying the code. And so lack of trust is another inhibitor. And inflexible policies and processes, that we're seeing very different processes that we're implementing and optimizing in continuous integration. So training and compensation, train the existing staff on cloud technology, fund Pathfinder teams, and be prepared to pay more when you've trained people that they're valuable. And "Get Out of the Way," there's a good book here by Patty McCord on powerful, which gives the story, if you like, of Netflix. So also move from projects to product teams, long-term product teams with ownership. So people stay with that product and understand it and go through the continuous delivery and updating that product. We talked about DevOps, the importance of DevOps. Run what you wrote, you know, you don't want to eat your own dog food, but test your own code. Also reduce the tech debt and lock-in in the sense that we don't want to lock ourselves into technologies. We need to understand that in the future other technologies will come down the pipeline and we need to implement them. So there's another couple of good books, "The Phoenix Project" and "The DevOps Handbook," which we should read. And we mentioned the move from capital expenditure to operating in the cloud, where it becomes an operating expense. So the financial people need to understand what is happening and we need to understand the impact of that. And as they say, we shouldn't be surprising the CFO. We need to bring them along with us. So the pathways for digital transformation, we're looking for speed, we're looking for scale, and we're looking for strategic implementations. We need to understand critical workloads, data center replacement, for example. We're going to be moving to cloud, distributed optimized capacity, and we've mentioned again time to value, time to get from ideation to product. And many companies are operating 400 times faster than other companies. That's pretty amazing. So again, this book "Accelerate," Nicole Fulgren, so it's worth reading. Think in terms of not years and months, but hours. And so that's basically the message. And we can go and optimize capacity. We need to go cloud-native principles. And you can't legislate against failure. Focus on fast detection and response. So the way now that we're defending our networks is not to keep, say, attackers out or to think that failure is not going to occur, but to embrace it and to practice. So running fire drills, so-called chaos teams, so chaos testing. These are staff that will take down machines. Chaos monkeys, for example, will automatically take out machines so that you'll get used to failure, you get used to being attacked, you get used to things going wrong, and it's time to recovery that's important. So expensive customer disaster recovery is being replaced by low-cost portable automatic chaos engineering. And so thanks for listening, and good luck with your digital transformation.