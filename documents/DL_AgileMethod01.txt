So let's take a look at what is called Agile. It's a development methodology. When you work in industry, you'll be part of a team and you'll be working with others. And that has its advantages and also its challenges. And originally, most of industry had been using what was called the waterfall method of developing software, which had intensive planning and would lay out milestones for years at a time. But gradually, people recognized that a lot of things were changing in the software world. We had cloud computing coming along, DevOps, other things that had a much faster clock tick. And that in those environments, we didn't have the experience that would be necessary to do waterfall. And so in 2001, over a dozen people that were experts in software development got together in Snowbird, Utah. And they came out with these principles. There were 12 of them. And these were much more realistic about how software was being developed at the time and as they thought how it should be developed. So for example, the highest priority is to satisfy the customer. If you don't satisfy the customer, you're not going to stay in business, but that we should have early and continuous delivery of valuable software. So we shouldn't wait three years for a software project to be completed. Also, we should welcome changing requirements, even if it's late in the game. Agile processes harness change for the customer's competitive advantage. That's the principle that the customer may have new needs and you need to take those into account. So go through all 12 of these. They're addressed though at how do we operate in an environment where we may not have developed this software before, so we're doing something new. And also the customer's requirements may be changing as we go along. Take a look at these 12 principles. And along with those, they specified four values so that they would value individuals and interactions over processes and tools, would value working software over comprehensive documentation, would value customer collaboration over contract negotiations, and would value responding to change of following a plan blindly. So this is all about how to operate in a changing environment. Now you'll find that there's quite a bit of language associated with Agile. And if you go to this URL here of Agile Alliance, they have a glossary of terms. But you'll hear about user stories and you'll hear about the three Cs, card, conversations, and confirmation. These user stories, for example, imagine that you want to book an airline ticket. So here's a real world problem. Now you have the user story of you're going online to book your ticket. And it seems at first fairly straightforward. But then when you look at the real problem, there are things like upselling and cross-selling. You're trying to book, for example, an economy class seat and they may be able to get you to use your air miles to upgrade to business class. Or they could be cross-selling. You might be sold a hotel and car rental to go along with your trip. And what happens if you want to change the time of your flight or your seats or you want to cancel and get a refund or a credit? So all of these things enter this user story. And frameworks that have been developed in Agile, one of them is called Scrum. And Scrum has things called Sprints. And a sprint usually lasts less than a month. And the idea is to break down the problem into bite-sized pieces so that we can go through something in one month where we plan, design, build, test, and review and launch. That we actually get working code. And one of the principles is to value working code over documentation. So we're always trying to trade off scope of the project against the quality of what we deliver and the cost of the project against time. These are the trade-offs. And the usual joke is you can usually have any two of three of these, but not all four. This has led to the environment that you'll be going into in a company. So you should read more about these. And as you see here, they've basically incorporated various what they call tribes. So these are different methodologies that you come across, such as extreme programming or DevOps. And Scrum here is this red line. But product management have other concerns. And here you'll see the green line, which is DevOps. The purple, that is design considerations. And then testing here on the far right. So all of these things are part of what is called agile. Typically in your company, not all of these things will be implemented. They'll have their own flavor of what they think works best for them. But you should certainly be aware of agile. Okay. Bye for now.