In this exercise we're going to write our own messaging service. So to do this we're going to need to load up Node.js, NPM, and then we'll download WS WebSockets. OK, let's get started. So at the moment several governments are saying that they need the keys to WhatsApp, iPhone, etc. that these systems are encrypting their messages and the government would like to get the keys so that it can watch these messages. But the problem is that as soon as the government gets the keys the bad guys will realize that the government has the keys and they have an alternative. So they can write their own message server and they can do it very quickly and very easily. Let me show you. So all you need for this is on your machine you need to load Node.js and NPM so that you can do the following. We can write our own server that uses WebSockets. So we're going to spin this up on a machine and we're going to use port 8080 for you to connect to. And the idea is that you connect using your browser and I'll show you the browser side code in a minute. And you send messages to this server and when this server receives the message it broadcasts it out to all the other clients that are logged in. So here's the event that on message that we're just going to print it to the console so that we can see it on the server side. But then we just broadcast it out to anyone else that's logged into us. And we can use whatever encryption we like layered on top of this. So this is 13 lines of code. Let me show you how the browser side works. So the browser side we're going to make a connection. Now we need to know where the server is. But we can do this out of band. That we can broadcast to the bad guy team where this server is. We can rent servers around the world and just spin them up in a second or two. And that they'll then receive the messages. And this is just pure browser.html code. So this is JavaScript code running inside the browser. We open a web socket and send the message "Hello from browser". And then we've got these to post the message to the server and display the message. And that's it. 37 lines of code. So this is just HTML up here. But that's it basically using web sockets. Let me demonstrate now. And we'll open up. So first we need to... Let me open up the server. Let me break out of this so you can see. So I just want to spin up the server. So this is the code. server.js And we use node to run that. Boom! The server is up and running on port 8080. We can use any port we like. So that's our server up and waiting now. So here it is. The browser. Let's spin it up. "Hello from browser". Let's have a look to see if our incoming message. We received it on there. So let me spin up another browser. So here's my other browser. Let me just copy that. So here are two bad guys now talking. So let's have this one. "Hello from Jane". Post the message. Yep. This one gets it. So... "Hi Jane. This is Fred". Post the message. Post it to myself. Yet Jane gets it. So Jane and Fred now are free to communicate to their hearts desire. Of course they can communicate and encrypted. So... Maybe that means something. But Fred can see it. And Fred can also encrypt. Post the message. And... Voila! So... getting the keys to WhatsApp or iPhone is easily circumvented by running your own. And this code is freely available on the web. Any competent node programmer or web programmer would be able to write this in half an hour. So it's futile for the government to go after WhatsApp and the big companies because the terrorists can just roll their own. OK. Thanks for watching.