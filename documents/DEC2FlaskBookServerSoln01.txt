So here's our exercise. We need to debug the code because it's got a bug at the moment, so that the decorators allow us to log in. Then we're going to need to add ourselves as a user and then see if we've got the capability to post books. OK, let's go and have a look here. So the problem was that when we tried to log in, so we were coming in here, but this session required decorator was stopping us. And that's because, let's think this through, that here we are and we're filling out the register form that's going to be posted back when we click submit, it's going to be posted back to /login. So we're not a user yet. The /login route will make us a user if we pass the username and password correctly. But what's happening now is the session required is being called first. And that's saying if you don't have a session with your username in it yet, I'm going to throw you back to register.html. So that's our problem, that we're doing this, this session required shouldn't be applied to /login. So what we need to do is just take that out. I need to get out of debug before saving it. Let's now run it again. OK, let's go back to here. Test user, test user. OK, we're coming into login. Let's step through. We're getting the username, we're setting the session now. So that's fine. So that's perfect. Let's keep going. And now it passes us to list, list books. Now again, we're in session required, but this time it's because we're in the route books. So let's step. So let's see. Yes, test user. We've got that when we get the session, test user is in there. So now we're coming through and everything's OK. And we get the books and it says, hello, test user. OK, so that's the first part. We've got rid of that problem and the rest works. So now let's take a look at the users. We're going to need to create a list of users. At the moment, we've just got one user. So let's create at least two users. So the second user I'm going to put as myself, John. And John. The password. OK, now the problem is I've just changed users from being a dictionary to being a list of dictionaries. So wherever we're checking users, we need to be careful. So let's see. There's a couple of places where we're checking the users. So one place we're assuming here in session required that there's only one user. We're saying if the session has got test user in it. Now we need to check for any valid user. So not just test user. Here we need to check because we've got test user and John and we could have lots more. So we need to loop over the username part of users here. Let's do that first. Because I think that's the easiest. So here. We've got the from browser, so that's the session we want to check if that that's a username. Let's have a look first. So for user in users. So a user now will be one of these. It will be a dictionary. In the list of users. So that's a loop. So now we want to check if. User. And we want username in here. So if user username. Is equal to from browser. We want to let them through. So. It's not test user now it's that. And. Now we need to do that. And that. Now what if they. That's OK. We don't need that's just going to end. We're out of the decorator. Let's save it. So we've done the decorator now let's look where else do we check. So it login time. We're checking. Against users again so we've got to correct this one. So it's not users. Now. OK. I think we need to do another for loop here. For user. In users. We're looking over them. And we want to check both the username and password. So why don't we make. This is what I want to do. What I'm this user is a dictionary. Why don't I make a dictionary. Out of. The request form username. So I'll say user now. Request form username comma password. And now instead of. My username I want to have. Password. OK. I don't need this for so now I can just say if. User in users. Then do the rest. If user in users. Excellent that does that. And then in books we don't do any checks because the session required takes care of it. I need to make sure I've got the post method in books. I put that in. And now let's just check first that we're got the users sorted out. That this now will. Handle. OK. So let's run and debug. I've got an error on. User equals. OK, I see it. Let's go. So I've got a problem here in life. Forgot that. Now it looks better. OK, let's run it. OK. We're up and running. Let's go now and. Let me show you what I'm doing here, so I'm going to under more tools. I'm going to clear browsing data. There we go. We've got no no users now. Let's go back to the. Login. So here we are and we need to have John as the user now. Submit. That seemed to go through list books. Didn't list books. So the check. This seemed to not work. Yeah, there we go. List books. OK, so now user. I've got test user. That's the first one. Do you see the problem? I'm returning. I need to loop. And check them all and only if none of them succeed. None of the users then redirect. Got it, so let's get out of debug and this now. Return otherwise. We return only. There. We go through that if none of that succeeds, then we redirect. OK. OK, let's go back to. Here we let's clean up the users again. Just clear browsing data. Yeah, we're good. Clear the data. OK, back to the start. Let me just run this so that. It's clean, OK? And let's go to localhost. 5000. I need to continue here. OK. Now we can put John in. John again. Sorry my machine is making a noise here. List books. Now we're in here. And you'll see that we need to check both of them. Now the user is. John. So we return. Exactly. Now. We've got our books. Perfect. Now let's go back and see if we can. Go in here. Let's see if we can add books. I want to copy this. That comma shouldn't be there at the end, but I'll put it in and edit it out before I submit. There we go. Submit it. OK, we're coming around again here. So it's going to check us. So the first user is test user. That won't be successful, but the next one will. And we're away. Let's see. Yeah, we added a book. So we completed all of the homework. And there'll be other ways of solving this. That the way I checked for the session required could be done a different way. I think this is quite reasonable to do it this way, and it allow us to add more users quite easily. And then the check down there in books, sorry, in login is I decided to create a dictionary from the form and then I could check against this is pulling out one dictionary and checking. So. If the user is in the users, we're OK. OK, so hope you learned a lot from that problem set. Bye for now.