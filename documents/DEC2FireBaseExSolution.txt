So let's take a look at the solution to this exercise. We need to include humidity in our Python script that publishes events to ThingsBoard and then publishes to Firebase. We've got to develop a new UI for ThingsBoard so that we include humidity. But the first thing we need to do is to make sure that we've spun up ThingsBoard. We need that running. And we need Firebase. Now I've got Firebase running here. And as you see I've got temperatures and I don't have any readings yet. I haven't pushed any in there. But you'll need to get an account and I'm using the realtime database. So this is the name I gave to that realtime database. And this is going to be the data stream. And so here I need... I'll be publishing to this address, this link. So you may want to copy that and put it so that we can use it later. OK. So that's Firebase. Now let's take a look for ThingsBoard. So here's ThingsBoard and I've done a cat on Docker Compose. So we've got it spinning up. So all I need to do is a Docker Compose up on this and that will allow us to spin it up. So we need to do Docker Compose up. And I've already done that and I've got it spinning. So let me just show you. I'm just going to check on my dashboard. I've got ThingsBoard. So I've hit port 8080 and got that running. So we're just left now. We need to do the Python. So let's bring up our Python starting point. So this is the ThingsBoard publish.py for Python. And I've got the access token. So if you haven't got that, you need to go back to ThingsBoard. And go to the devices and then find the device. It's this one. And you need to copy the access credentials there. And you can see this is my access token. OK, so now we've got that access token. We can go back to our code here. And we need to put in not just temperature but humidity. So I've added it to the start of sensor data here. But I also now need to create a new humidity. And we'll do it the same way. Random.randint. And let's go between-- let's go from 50 to-- let's go from 50 to 90% humidity. Well, we'll go to 100. Unlikely we'll get it that high. Now we need to update the sensor data and the humidity. OK, so that will now publish both temperature and humidity. I'm actually going to save that under a new-- copy that. I'm going to save it under a new-- There we go. A new file. Good. So we can run that. OK, I misspelled humidity here. I corrected that. So humidity now. And I'm printing out humidity here. And putting it into the sensor there, sensor data. OK, so we're good on that. Let's spin up Python. So OK. So you see it's publishing. Let's wait for the second one just to make sure. I've just got it publishing every 10 seconds here. So there we go. OK, let's go now and see if we're getting data on our Things board. So let's go to Things board here. This is our sensor. And I've got the telemetry. And we see we've got now humidity and temperature. And they're both changing. So that's good. Now we've got to create our dashboard. Let's go to our dashboards. And let's start a new dashboard. So let's call this temp-humidity. OK, so let's open the dashboard. And now let me just adjust this a moment. OK, now we need to go into edit. And let's add a new widget. So the first one let me get a card. And a simple card. And let's add. So here we need our device name MQTT source. OK. And the filter type is its device. And we want MQTT source. And we'll add that. So now we've got that. Now we can get, I'll add humidity. And let's get temperature. So those are our two cards there. Now let's add two more charts. So this chart, MQTT. We'll start with humidity. I'm going to make this chart a little larger. Let's set it out. There. So that's humidity. And now let's get one for temperature. OK. Beautiful. That looks pretty good. We can maybe pull that out a little. Temperature there. And let's align these. That's good. OK. I like it. Let's just watch the data come in. Actually, what I'm going to do is I'm going to go back and increase the rate that I'm publishing. Let's go and do that. So let me, I'm going to break in here. Exit. And instead of time sleep of 10, let's go with two. OK. And re start that. We should be fine. Let's go back to this. OK, here we go. Now you can see the data is coming in faster. And let's go and take a look what's happening on Firebase. So Firebase. Are we publishing data here? Doesn't look like it's working. OK, let's go back and make sure. So here, let's save these. There you go. Now that I've saved those, let's just take a look. Let me go back to the real time database. And we can see if we've got anything. OK. We're not publishing at the moment to that. Let's go take a look. So we've got this running. That's finished. Now we've got to take a look at our rule chains to make sure that we get those correct. So let's take a look at temperature to Firebase. And let's just take a look at our full rule chain here. So we start with this. This is where it's going to be coming in. And we're taking a feed to save time series. And if that's successful, we go to create and clear alarms. So let's go to create and clear alarms. And let's see what we've got here. So what's going to be coming in here are both of those pieces of data. So now let's take a look. There's max temperature here. Let's edit that. So this is the problem. We need to return not only message temperature less then but let's return an array. OK, that should be fine. Let's edit that. Now we've got both of these being returned and passed on. Let's go and see now if... No, it's still not coming through. Ah, there we go. Let's have a look now. OK. Let's see here. What I want to do is... Let me go back. And I want to edit this. I've got all these. Read only in non-real time mode activated. So that's kind of strange but let's go take a look. Oh, we've got... OK. I've been writing to this all night and so let's go take a look now at our real time database. So we've got a problem here. Let me fix this. OK, so I've come across a problem in that I've been writing to this all night and I happen to leave it running and now I can't edit it. So last night I left my Things board running and it was pumping data into Firebase all night. And what happens then is you have so many readings here that Firebase then stops dynamic editing in the sense that you can't just click on, say, temperature and delete this or click on the database and delete it. It won't let you do that. If that happens to you, this is what you have to do. You need to go to your project settings. And so here you've got, I call this Kafka Lite. This is that. Now you need to go to the very bottom and delete the project. So you click Delete Project. You'll have to answer these questions that you really want to delete all your data and that will allow you to delete the project. So now it's gone. I'll need to recreate it again. But if that happens to you, that's the solution. So here we are in Firebase and I set up a new Kafka Lite to take a look at this and I've just started it here. And we can see that I've got a few temperatures and we've got temperature and humidity notice. So we're publishing every 10 seconds here. So that's perfect. And even our alarms are working that here. Excellent. So everything is working now. And we've got both temperature and humidity. So after restarting my project in Firebase, I realized that the edits I made back here on the maximum temperature. I realized that this is just going to return a true or false and that the message has both humidity and temperature in it. And so there was. So I had to undo the change I made and return to just having a temperature alarm. If I wanted to set humidity alarm, I could. But I feel like we've gone through enough pain already. And this now works. So. We just save that and everything is working fine. So you see, sometimes we have to pay attention to the little details that you have in your mind, what you think the error is. And it's not that at all. So I thought my problem was in the complex bit up here. But my problem was that I'd been writing to Firebase all night and Firebase had changed its mode so that I could no longer do things like just delete the temperature by clicking here. So that would have deleted it. But I had so much data, it wouldn't let me do that. It had switched into its non real time mode, which I discovered exactly what it is. And we had to delete the project. OK, so that was exciting. Hopefully I learned a lot. I think perhaps you'll understand that debugging is quite an art and often you go through all kinds of issues before you find the real one. OK, bye for now.