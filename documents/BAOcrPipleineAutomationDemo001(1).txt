So let's take a look now at constructing this optical character recognition pipeline. I'm assuming that we understand how to set up buckets in Google Cloud, and also that we've set up Pub/Sub before and can create topics. And the piece that we haven't done before is to launch these Cloud Functions that make use of the various APIs, the Translation API, the Vision API, and actually there are some other APIs as well. So let's focus on those, and we're going to use this Quick Start here on optical character recognition. It's a tutorial, and we're going to step through it, and I'm going to do that fairly quickly. But we're going to be making use of these Cloud Functions that we need to write, and I have them here. This is the Cloud Function. We'll show you where to download this, but this will be launched and we'll push this up into the cloud. At the moment, this is on my machine. So we're going to download from GitHub a repo and place it on your machine, and then you will have the same code. And then we need to see how to push this code up into Google Cloud. Okay, so that's where we're going. Let's start. First, there may be some small costs. I haven't seen any, and I've launched this several times in the past day or so. And we need to select first a project. I've set up a project already. I've set this demo project to here, and you'll see that I've made some recent API requests. But this is the one that we're going to use. We're going to need to remember the project ID, especially here. Okay, so let's take a look at the functions that we're going to use. So we're going to be using cloud storage. So this is where the buckets are. We've set those up, and I'll show you those. And we set up PubSub, and we set up two topics, and we have subscriptions to those. And we set up here a service account that we're going to use. So I'll make individual videos to show you how to do each one of these, but just to show you what we have already set up. So here we've got ORC text, or rather sorry, OCR text, and we've got OCR translate as topics that we can publish to and subscribe to. And here there are subscriptions, OCR text sub and OCR translate sub. So these are going to do the work of catching events and having somebody subscribe to those events that will trigger more actions in the pipeline. So let's take a look now at where we get the code. So we're going to be using the cloud command line interface, and I'm going to be running that. So here I've loaded up Google Cloud SDK, and I can access it through G Cloud. So I'll be issuing commands to G Cloud. Now the first thing that you need to do actually is to make sure that you're the correct user here. So let me show you how to do that. So the first command is G Cloud auth login. And I'm choosing my name here, and I'm allowing this to have access. You really need to remember to do that, otherwise you're going to be in trouble. So here I've been logged in, and now I need to set the project. So I've got a project here that I'm running under demo project 002, and now I need to set that to make sure that it knows which project. So if you're going to repeat this, you need to change the project ID and set up your own project. So now we know we're operating G Cloud, knows exactly who's talking to it, and which project all the commands are going to be about. OK, so let's set that up. And you can update your components if you like. I've already done that. Now what we need to do, we've seen this, we're going to create some storage buckets. I'm going to do this by hand. So I've already created the storage buckets and I've created the topics, but you can do this by using in the command line itself. I feel you have more control actually if you're doing it in the console. Now what we're going to do is we're going to launch some code, and we need to get this code from GitHub. So to do that, you need to go to your terminal window. I've already done this. And I created a directory called OCR demo. And if you run this command, it will create this file system. If you're not going to run it, you can. And what you need to do is to step into Python doc samples. It actually has a tremendous number of examples in here. It's downloading all the Python documents that Google has created. So the one that we're interested in, the OCR, is actually under functions. Because these are cloud functions that we're going to be dealing with. And under that, we're looking at OCR. And under OCR, we want to use app. And you'll see in there, we've got code, mainpy maintest. And we can look at that code. So here I am under app. And there's some test images that they give us. We saw how we could interpret the text in this sign. So we're going to be operating here on this main.py. OK, so we don't need to make any changes at all in this code. We're going to do that by overriding some commands here. So now we've changed directory into this app directory. And now it's showing us the code. We don't need to make any changes in this code at all. This is all referring to this main.py which we've seen. Now what we're going to have to do, though, is deploy these functions. And this is the tricky bit, if you like, that we need to create and fill in these names. So let me show you. I've done that for my function. Let me bring this in. So here's my project ID. I copied that in here. We executed the login on our machine. And now I replaced what we have in here with the names of... Let's go through them one by one. I'll put them side by side. So that... Let me see if we can do that, actually. So the first one is this one, OCRExtract. We need the image bucket, the project, and the topic, the pubsub topic. And then the result topic. So both the topics that we've set up need to be placed in here. Let me show you. So here we've got... Here's the image bucket, OCRImageBucket. And we've got the project. And OCR... This is the topic, OCRTranslate, and the other one, OCRText. And there's two languages. We've got Spanish, English, French, and Japanese. So now we copy this. And we go to our terminal window and we execute it. Now, to do that, make sure you're in this directory where main exists. You must be in that directory. Then you issue this command. I've already issued the commands, so that's the first one. Then the second one is this one. And again, you need to make the substitutions. The trigger topic is translate here. And the project name, same as we put in before. And then the result topic is OCRText. And then finally, the deploy one. Again, we put in trigger topic is OCRText, project name, and then the result bucket is OCRTextBucket. OK? So those are the functions that we need to launch. And they will push the code up into the cloud. So I'll relaunch it. I haven't tried that, but let's see how that works. So here we are. And it takes a couple of minutes. So we launch each one of these. And then those functions will be up in the cloud. And now we can upload an image and we can either do it through the command line here. Or just as I showed you before, we can just drag and drop our image up into the bucket. And that will trigger the execution. Let's go and do that. So here's our image bucket. We dragged up this sign. Let me delete this so we can start it again. And if I go to the text bucket, let's delete all of these. So we'll delete them. Now let's go back and reload on a new image into the image bucket. I'm just going to check that version ID 2. So I overwrote the function that was already up there. So we can do that with each of these. But let's go back now and upload a file into the image bucket. So here's the sign. Open it. It's in the image bucket. And now if we look at the text bucket, we see that we've got the text extracted from those images. And we've got English, Spanish, French and Japanese. And so just look at the English again and stop line. So the whole pipeline is working. So we've seen how to construct this decent sized pipeline that takes an image when it's deposited in the bucket. It takes that image, processes it, gets the text out of the image. If the text needs translation, it translates the text and then writes out that text to various files in another bucket, the output bucket. So that's quite a beautiful pipeline. And the key are these cloud functions that we need to write and upload so that they run. Now, if you do that, you may want to make sure at the end you destroy all your functions that you're using. And what I'd suggest is that you just delete the project. So if you delete this demo project, all the things that are associated with it, so the pub/sub, the cloud storage and even the service account will get destroyed. So you certainly won't burn up any money in running these. OK, so that's optical character recognition pipeline automated. Bye for now.