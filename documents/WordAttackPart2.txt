OK, so we remember we wrote a program, an attack program of virus in C and we compiled it to virus.exe. So let's just show you what virus.exe looks like at the moment. And it's basically just a load of bytes here. Now the problem with this is that intrusion detection systems may be able to detect this at the moment. So let's see what the attackers did next. What they did is they basically turned this into a string. So what we want to do is we want to turn it into something like this. OK? So let's see how they did that. So in PowerShell here we can get virus.exe. So this is basically your command window and in Windows it's got a few extra commands. But we're going to turn this first into hex and then we're going to turn it into strings. So let's see that. So let's execute that. OK so that runs. And now what we want to do is we're going to do something like this where we write all the lines and let me expand this a bit more so we can pull it over here. And now I'm going to have to do it even more. So you can see this is a string. We can't get it all on there but believe me what this is going to do when we're going to write this to this file dump.txt as a string. So we execute that. Let's just make sure that I've executed that. There we go. And now if I look at my file system here. So it's not that one. Let's go to the right one. Courses summer course. Let me just view this as large icons. So we've got this file dump. So let's take a look. It's a text file. Let's take a look at it. And here we go. This is dump.txt. And now you'll see that these are strings. So the attackers did even one step more. They turned these strings now. They put these strings into an array. So I've got some code here that I've written. And let's take a look at it. But if we go here-- sorry, let's open the-- here it is. Basically I've got a means of writing this create jigsaw from text. So I've got this text file called dump.txt that looks like this. And now what I want to do is I want to turn it into an array of strings. This is one big long string at the moment. And so create jigsaw from text is down here. Create jigsaw from text. What we're going to do is we're going to read that big long string and we're going to write it out here. I'm going to loop over it. And I'm going to create this jigsaw.txt. And you'll see here, this is where I write to it, that I'm basically going to write it so that it says AA. And I'm going to give it that and into a number. So I'm going to create an array of arrays. And here we see here I'm going to have an array. And into that I'm going to put into each array. I'm going to put 10 of these strings. So here it is. So now I'm creating a jigsaw if you like. Now I needn't do 10, I could do any number. The attackers did a much larger number. But basically now I can scramble this and then reconstitute it later. And let me show you what they did. So the attackers, basically here's their array. So now this is the executable but in an array of strings. So each one of these is a string. And in their case, like I say, it was a much longer string. You see here it was 127 long. Mine is just 10. But basically it's the same game that now intrusion detection systems can't see the executable. Of course we've got to go one more step afterwards and we've got to reconstitute the executable out of these arrays of strings. But that's what this code here does. And here when the document is opened, this macro will run and the executable will fire. So it's very neat. You need to spend a little time with VBE script but it's basically easy to do. So again, these quite simple transformations can hide executables in PDF files, in Word documents, in Excel spreadsheets.