Hi. So in this section we're going to look at software engineering basics. The environment that you're going to be operating in as a data engineer is a complex event-driven asynchronous distributed environment. You're going to be handling lots of machines that are running various applications and sending data between those machines. Today, those messages will probably be HTTP messages. But underneath that we've got the basic internet. And you need to understand first the basics of networks. They're running usually TCP/IP and we need to understand how the packets find out where to go. They're directed by an IP address. Every machine has an IP address. We'll be looking at public and private IP addresses because the chances are you'll be sitting on a laptop and that'll be behind some kind of service provider's gateway. And they've probably given you a private IP address. So your devices, so for example at home my devices, all have private IP addresses but share a public IP address. And we'll be taking you through how those work. Then we'll be looking at today's asynchronous event-driven environment. These applications that you'll be dealing with are probably written in different computing languages. We're going to be using Python, which is one of the most popular. But there are other languages such as JavaScript, Go, C#, etc. that you'll come across. Now the brilliance of Sir Tim Berners-Lee was to invent HTTP. And this is a messaging protocol. And it's basically a standard that's used by all these computer languages. So it doesn't matter if your program is written in JavaScript or in Python. You'll probably be developing, sending messages that are based on HTTP. So we're going to dig into HTTP so you understand how it's structured. It has headers and it has a body. The headers can consist of cookies or other security tokens buried in them. And also they have what we call HTTP verbs, GET or POST. And the structure depends on what verb is being used. So we'll cover those in some detail because one of the things that you'll find probably most trying is dealing with security tokens. In order to operate on the web, in the cloud, you have to generate security tokens so that your message will get through. So this is one of the most serious barriers that you have to cross is how to handle security tokens. We'll be going into Kerberos to give you an example of why these security tokens are needed, to understand what are the attackers doing, what are they likely to be doing. We'll be talking about PKI, public key infrastructure, public and private keys. We'll be showing you how to sign documents so that they can't be altered using your private key. We'll be passing our public key into GitHub so that GitHub knows that it's us that are encrypting messages that are being sent to them. So the fact that they can decrypt the message with our public key tells them that it was me, for example, that sent the message using my private key. So you need to understand the concepts, the basic concepts of security because they're foundational these days. And we'll be giving an example of OAuth2 which is one of the security standards. So let's start diving in now to the basics of software engineering, the tooling and the concepts that you need to master before we get to the exciting stuff. Okay. Bye for now.